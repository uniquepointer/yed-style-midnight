#Emacs stuff
*~
.#*
# ---> C
# Prerequisites
*.d

# Object files
*.o
*.kov
*.obj
*.elf
obj/

# Linker output
*.ilk
*.map
*.exp

# Precompiled Headers
*.gch
*.pch

# Libraries
*.lib
*.a
*.la
*.lo

# Shared objects (inc. Windows DLLs)
*.dll
*.so
*.so.*
*.dylib

# Executables
*.exe
*.out
*.app
*.i*86
*.x86_64
*.hex
xxx

# Debug files
*.dSYM/
*.su
*.idb
*.pdb

# Kernel Module Compile Results
*.cmd
.tmp_versions/
modules.order
Module.symvers
Mkfile.old
dkms.conf

# ---> C++

# Compiled Object files
*.slo

# Compiled Static libraries
*.lai
*.a

# Executables
*.exe
*.out
*.app

# ---> Tags
tags

# ---> Go

# Binaries for programs and plugins
*.exe
*.exe~
*.dll
*.so
*.dylib

# Test binary, built with `go test -c`
*.test

# Output of the go coverage tool, specifically when used with LiteIDE
*.out

# Dependency directories (remove the comment below to include it)
# vendor/

# ---> Rust

# Generated by Cargo# will have compiled files and executables
debug/
target/

# Remove Cargo.lock from gitignore if creating an executable, leave it for libraries
# More information here https://doc.rust-lang.org/cargo/guide/cargo-toml-vs-cargo-lock.html
Cargo.lock

# These are backup files generated by rustfmt
**/*.rs.bk

# ---> Ocaml
_build

# ---> Zig
zig-cache*
build-runner.zig

# ---> Nix
.direnv*
.envrc

#RoboDeps
robodep/

#Premake
*.make

# Meson stuff
.cache/
build/
debugxxx
test/

#Tup
.tup/

# Misc
test
dummy*

#hg
.hg*

#lsp
*ccls*
*compile_commands.json

#Valgrind
vgcore*
gdb*
